<Window x:Class="Kirin_2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:notification="http://schemas.syncfusion.com/wpf"
        xmlns:settings="clr-namespace:Kirin_2.Properties"
        Background="WhiteSmoke"
        Icon="pack://application:,,,/Images/favicon.ico"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="10"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="" 
        Width="{x:Static SystemParameters.PrimaryScreenWidth}"
        Height="{x:Static SystemParameters.PrimaryScreenHeight}"
        MinHeight="630" MinWidth="1250" 
        Loaded="Window_Loaded"
        StateChanged="Window_StateChanged"
        WindowStartupLocation="CenterScreen"
        SizeChanged="Window_SizeChanged"
        PreviewMouseWheel="MouseWheelHandler">

    <Window.Resources>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}"
            BasedOn="{StaticResource {x:Type Separator}}">
            <Setter Property="Width" Value="35"/>
            <Setter Property="Background" Value="LightSlateGray"/>
            <Setter Property="Margin" Value="6,0,6,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent" >
                            <materialDesign:PackIcon Kind="ChevronUp" x:Name="ExpandPath" HorizontalAlignment="Right" 
                                VerticalAlignment="Center" Margin="1,1,1,1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Kind" TargetName="ExpandPath" Value="ChevronDown"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,5,0" StrokeThickness="5" Stroke="Black"
                                StrokeDashArray="1 2" Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TreeViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel Margin="-10 0 0 0" >
                            <Separator Background="LightGray" Grid.Row="0" Grid.Column="0" Width="350" Margin="5 5 5 5" x:Name="TreeViewItemSeparator" Visibility="Collapsed"/>
                            <Border x:Name="Bd" Grid.ColumnSpan="2" BorderThickness="1" Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="true" Height="30" Margin="0 0 5 0" >
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="false">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <DockPanel>
                                    <Grid DockPanel.Dock="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="330*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="30*" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="2" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      VerticalAlignment="Center" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="10 -3 0 0" TextBlock.Foreground="{Binding Source={x:Static settings:Settings.Default}, Path=SPanelItemForeground, Mode=TwoWay }" TextBlock.FontSize="20" TextBlock.FontWeight="ExtraBold" >
                                        </ContentPresenter>
                                    </Grid>
                                    <ToggleButton DockPanel.Dock="Right" x:Name="Expander" VerticalContentAlignment="Top" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 15 0" Grid.Column="1" Grid.Row="0"  Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                </DockPanel>
                            </Border>

                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1">
                            </ItemsPresenter>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="true">
                                <Setter TargetName="PART_Header"
                                    Property="TextElement.Foreground"
                                    Value="black"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>

                            <Trigger Property="HasItems" Value="True">
                                <Setter Property="Visibility" TargetName="TreeViewItemSeparator" Value="Visible"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#F1F2F3"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="transparent"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#F1F2F3"/>
                                <Setter Property="Foreground" Value="#247BC0" />
                                <Setter Property="CornerRadius" TargetName="Bd" Value="20,20,20,20" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition SourceName="Bd" Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" TargetName="Bd" Value="#F1F2F3"/>
                                <Setter Property="CornerRadius" TargetName="Bd" Value="20,20,20,20" />
                                <Setter Property="Foreground" Value="#247BC0" />
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>

                                <Setter Property="CornerRadius" TargetName="Bd" Value="20,20,20,20" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiTrigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrush}}"/>
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="true"/>
                                    <Condition Binding="{Binding ElementName=ItemsHost, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="transparent"   />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
        </Style>

        <Style x:Key="FBButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0 30 0 20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--<Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="Black"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        
                        <StackPanel>
                            <Separator Background="gold"/>
                            <Border x:Name="Bd" Grid.ColumnSpan="3" BorderThickness="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Margin="3,0,3,-1" MinHeight="20">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                -->
        <!--<Setter Property="Background" Value="Red"/>
                                                <Setter Property="BorderBrush" Value="Black"/>-->
        <!--
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="false">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                            
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="transparent"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Gold"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>


                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="true"/>
                                    <Condition Binding="{Binding ElementName=ItemsHost, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="LightGray"/>
                            </MultiDataTrigger>
                            -->
        <!--end-->
        <!--

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="tab_pnl">
                <!--<EasingDoubleKeyFrame KeyTime="0" Value="45"/>-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="220"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu" >
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="tab_pnl">
                <!--<EasingDoubleKeyFrame KeyTime="0" Value="200"/>-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--<Storyboard x:Key="CloseMenuSelected">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="tab_pnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="40"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>-->

        <Storyboard x:Key="OpenMenuSSPnl" CurrentStateInvalidated="Storyboard_OpenMenuSSPnl_CurrentStateInvalidated">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Width)" Storyboard.TargetName="subsection_pnl">
                <!--<EasingDoubleKeyFrame KeyTime="0" Value="30"/>-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="280"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimation 
                  Storyboard.TargetName="animatedPanelColor"
                  Storyboard.TargetProperty="Color"
                  From="Transparent" To="{Binding Source={x:Static settings:Settings.Default}, Path=Subsection_BG, Mode=TwoWay }" Duration="0:0:0.5" />
        </Storyboard>

        <Storyboard x:Key="OpenMenuSSPnl_nonFlick" CurrentStateInvalidated="Storyboard_OpenMenuSSPnl_CurrentStateInvalidated">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Width)" Storyboard.TargetName="subsection_pnl">
                <!--<EasingDoubleKeyFrame KeyTime="0" Value="30"/>-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="280"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="CloseMenuSSPnl" CurrentStateInvalidated="Storyboard_CloseMenuSSPnl_CurrentStateInvalidated">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Width)" Storyboard.TargetName="subsection_pnl">
                <!--<EasingDoubleKeyFrame KeyTime="0" Value="188"/>-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="15"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimation 
                  Storyboard.TargetName="animatedPanelColor"
                  Storyboard.TargetProperty="Color"
                  From="{Binding Source={x:Static settings:Settings.Default}, Path=Subsection_BG, Mode=TwoWay }" To="Transparent" Duration="0:0:1" />
        </Storyboard>

        <!--// Toggle Button Style Template //-->
        <ImageBrush x:Key="tb_mouse_over"/>

        <!--// Text font style //-->
        <Style x:Key="font_style" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="10"/>
        </Style>

        <!--// Tooltip Style Template //-->
        <Style TargetType="ToolTip" x:Key="tt_style">
            <Setter Property="Placement" Value="Bottom"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Background" Value="#CC374652"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="ToolTipService.HorizontalOffset" Value="50" />
            <Setter Property="ToolTipService.VerticalOffset" Value="-10" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            <Setter Property="FontSize" Value="9"/>
            <!--<Setter Property="PlacementRectangle" Value="240,0,0,0"/>-->
            <!--<Setter Property="HorizontalOffset" Value="20"/>
            <Setter Property="VerticalOffset" Value="1"/>-->
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="StackPanel.MouseEnter" SourceName="tab_pnl">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="StackPanel.MouseLeave" SourceName="tab_pnl">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="subsection_flyoutbtn">
            <BeginStoryboard Storyboard="{StaticResource OpenMenuSSPnl}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="subsection_flyinbtn">
            <BeginStoryboard Storyboard="{StaticResource CloseMenuSSPnl}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid x:Name="MainWindowGrid" Background="#F8F9FA">
        <Border CornerRadius="10" BorderThickness="1" BorderBrush="Gray">
            <Grid x:Name="MainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                    <ColumnDefinition Width="300*"></ColumnDefinition>
                    <ColumnDefinition x:Name="FrameCol" Width="917*"></ColumnDefinition>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="53*" Name="rowToHide"></RowDefinition>
                    <RowDefinition Height="60*"></RowDefinition>
                    <RowDefinition Height="416*"/>
                    <RowDefinition Height="41*"></RowDefinition>
                </Grid.RowDefinitions>

                <!--region header-->

                <!--<Viewbox Stretch="UniformToFill" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">-->

                <!--<StackPanel x:Name="MainWindowHeader" Orientation="Horizontal" Background="#f0f4f7"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">-->

                <Grid x:Name="MainWindowHeader" Background="#f0f4f7" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*" />
                        <ColumnDefinition Width="30*" />
                        <ColumnDefinition Width="180*" />
                        <ColumnDefinition Width="350*" />
                        <ColumnDefinition Width="130*" />
                        <ColumnDefinition Width="300*" />
                    </Grid.ColumnDefinitions>
                    <GridSplitter Grid.Row="1" Grid.ColumnSpan="6" Height="2" BorderBrush="LightSlateGray" BorderThickness="2" Opacity="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                    <Image Source="/Images/Logo.png" Stretch="Uniform" Margin="5,5,5,5" Grid.Row="0" Grid.Column="0" />
                    <!--MouseLeftButtonDown="Image_MouseLeftButtonDown"-->
                    <Viewbox Stretch="Uniform" Grid.Column="1" Grid.Row="0">
                        <Separator Style="{DynamicResource VerticalSeparatorStyle}" Grid.Column="1" Grid.Row="0" Margin="10 0" />
                    </Viewbox>

                    <Viewbox Stretch="Uniform" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <StackPanel HorizontalAlignment="Left" Grid.Column="2" Orientation="Vertical" Margin="0 5 0 5">
                            <Button HorizontalAlignment="Left" HorizontalContentAlignment="Left" Background="WhiteSmoke" BorderThickness="0" Click="Button_Click" Style="{StaticResource Null}">
                                <StackPanel>
                                    <Label x:Name="MainClassSelector" Content="{Binding subjectCode,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Top" />
                                    <Label Content="{Binding userNameRole,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="left" VerticalAlignment="Top" FontSize="14" Margin="0 0 0 5" FontWeight="DemiBold" Foreground="#DD8B8888"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Viewbox>

                    <StackPanel Grid.Column="3" VerticalAlignment="Center">
                        <Viewbox>
                            <materialDesign:ColorZone CornerRadius="5" VerticalAlignment="Center"
                                HorizontalAlignment="Left" HorizontalContentAlignment="Left" Mode="Standard"
                                materialDesign:ShadowAssist.ShadowDepth="Depth1" Height="30" Width="400" Background="#E8EAED" Margin="30 0 0 0 " >
                                <StackPanel Width="300" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button Style="{DynamicResource MaterialDesignToolButton}">
                                        <materialDesign:PackIcon Kind="Search" Opacity=".56"  />
                                    </Button>
                                    <TextBox Width="300" Margin="8 0 0 0" materialDesign:HintAssist.Hint=""
                                        materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0"
                                        MinWidth="100" VerticalAlignment="Center" />
                                    <Button Style="{DynamicResource MaterialDesignToolButton}">
                                        <materialDesign:PackIcon Kind="Microphone" Opacity=".56" Margin="8 0 0 0" />
                                    </Button>
                                </StackPanel>
                            </materialDesign:ColorZone>
                        </Viewbox>
                    </StackPanel>

                    <!--NAVIGATION LINKS-->
                    <StackPanel Orientation="Horizontal" Grid.Column="4">
                        <Viewbox Stretch="Uniform">
                            <StackPanel Orientation="Horizontal">
                                <Button Style="{StaticResource MaterialDesignIconButton}" Click="BackButton_Click"
                                        ToolTip="Go Back" Margin="20 0 0 0" Background="Transparent"
                                        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                    <materialDesign:PackIcon Kind="ArrowLeftCircle" Foreground="Gray" Height="20"  />
                                </Button>
                                <Button Style="{StaticResource MaterialDesignIconButton}" Click="ForwardButton_Click"
                                        ToolTip="Go Forward" Background="Transparent"
                                        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                    <materialDesign:PackIcon Kind="ArrowRightCircle" Foreground="Gray" Height="20" />
                                </Button>
                            </StackPanel>
                        </Viewbox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="5">
                        <Viewbox Stretch="Uniform">
                            <StackPanel Orientation="Horizontal">
                                <Button Style="{StaticResource MaterialDesignIconButton}" ToolTip="FAQs" Background="Transparent"
                                      IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                    <materialDesign:PackIcon Kind="Viewgrid" Foreground="Gray" Height="15" />
                                </Button>

                                <Button Style="{StaticResource MaterialDesignIconButton}" Click="View_DailyBulletin"
                                      ToolTip="Daily Bulletin" Background="Transparent"
                                      IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                    <materialDesign:PackIcon Kind="BellOutline" Foreground="Gray" Height="20" >
                                        <notification:SfBadge.Badge>
                                            <notification:SfBadge Shape="None" HorizontalPosition="0.7" VerticalPosition="0.3" x:Name="badge">
                                                <notification:SfBadge.Content>
                                                    <Ellipse Width="7" Height="7" Fill="Red"/>
                                                </notification:SfBadge.Content>
                                            </notification:SfBadge>
                                        </notification:SfBadge.Badge>
                                    </materialDesign:PackIcon>
                                </Button>

                                <Viewbox Stretch="Uniform">
                                    <Button Name="btnHelp" Style="{StaticResource MaterialDesignIconButton}" ToolTip="Help" Background="Transparent"
                                    IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                        <Button.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="HelpPopup" 
                                                             Storyboard.TargetProperty="IsOpen">
                                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                            </BooleanAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </Button.Triggers>
                                        <materialDesign:PackIcon Kind="HelpCircleOutline" Foreground="Gray" Height="20" />
                                    </Button>
                                </Viewbox>

                                <Popup x:Name="HelpPopup" PlacementTarget="{Binding ElementName=btnHelp}" StaysOpen="False" >
                                    <Border Height="450" BorderThickness="1" CornerRadius="5,5,5,5" BorderBrush="LightGray" 
                                        Background="White" Width="300" Name="Close">
                                        <DockPanel Margin="1">
                                            <StackPanel Orientation="Vertical">
                                                <Grid Visibility="Visible">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>

                                                    <Label Grid.Row="0" Height="30" VerticalAlignment="Top" FontSize="14" FontWeight="Bold" Margin="10"
                                                        HorizontalAlignment="Center" Content="Help"/>

                                                    <Button Grid.Row="0" Style="{StaticResource MaterialDesignIconButton}" Click="Close_Click" ToolTip="Close" Background="Transparent"
                                                        HorizontalAlignment="Right" IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                                        <materialDesign:PackIcon Kind="Close" VerticalAlignment="Center" Foreground="Gray" />
                                                    </Button>

                                                    <materialDesign:ColorZone Grid.Row="1" CornerRadius="20" Width="270" VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Left"
                                                        Mode="Light" materialDesign:ShadowAssist.ShadowDepth="Depth1" Height="40" Background="WhiteSmoke" >
                                                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                                                            <Button Style="{DynamicResource MaterialDesignToolButton}" VerticalContentAlignment="Top">
                                                                <materialDesign:PackIcon Kind="Search" Width="20" Height="20" Opacity=".56"  />
                                                            </Button>
                                                            <TextBox FontSize="12" FontWeight="Medium" Margin="8 0 0 0" materialDesign:HintAssist.Hint="" materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                                                            Text="Search Help" BorderThickness="0" MinWidth="200" Name="SearchBox" TextChanged="HelpSearchBox_TextChanged" VerticalAlignment="Center" />
                                                        </StackPanel>
                                                    </materialDesign:ColorZone>

                                                    <DataGrid Grid.Row="2" Width="300" x:Name="DGHelp" Height="Auto" Background="Transparent" HeadersVisibility="Column"
                                                      ItemsSource="{Binding HelpList}" AutoGenerateColumns="False" Margin="10 20 10 10" Focusable="False" GridLinesVisibility="None"
                                                      CanUserAddRows="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                                        <DataGrid.CellStyle>
                                                            <Style TargetType="DataGridCell">
                                                                <Setter Property="Height" Value="50"/>
                                                            </Style>
                                                        </DataGrid.CellStyle>
                                                        <DataGrid.Columns>
                                                            <DataGridTemplateColumn Header="Popular Help Resources">
                                                                <DataGridTemplateColumn.HeaderStyle>
                                                                    <Style TargetType="DataGridColumnHeader">
                                                                        <Setter Property="Height" Value="40" />
                                                                        <Setter Property="Width" Value="230" />
                                                                        <Setter Property="FontSize" Value="12" />
                                                                        <Setter Property="FontWeight" Value="DemiBold" />
                                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                    </Style>
                                                                </DataGridTemplateColumn.HeaderStyle>
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                                            <Grid Grid.Row="0" Grid.Column="0" Margin="5 0 10 0">
                                                                                <Button Style="{StaticResource MaterialDesignIconButton}" Background="#E9F1F8" Height="30" Width="30" FocusVisualStyle="{x:Null}" Focusable="False">
                                                                                    <materialDesign:PackIcon Kind="Receipt" Foreground="#247BC0" Height="20" Width="20" HorizontalAlignment="Left" Background="#E9F1F8" />
                                                                                </Button>
                                                                            </Grid>
                                                                            <Grid Grid.Row="0" Grid.Column="1">
                                                                                <TextBlock Text="{Binding Path=Help}" TextAlignment="Left" VerticalAlignment="Center" FontSize="12" FontWeight="Medium"></TextBlock>
                                                                            </Grid>
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                        </DataGrid.Columns>
                                                    </DataGrid>

                                                    <Button Style="{StaticResource FBButtonStyle}" Grid.Row="3" Click="Browse_Click" Background="Transparent"
                                                        HorizontalAlignment="Center" Width="250" BorderThickness="0" Margin="5" >
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                            <Label Content="Browse all articles" Foreground="#247BC0" FontSize="12" ></Label>
                                                            <materialDesign:PackIcon Kind="ArrowRightBoldBoxOutline" VerticalAlignment="Center" Foreground="#247BC0" />
                                                        </StackPanel>
                                                    </Button>
                                                </Grid>
                                            </StackPanel>
                                        </DockPanel>
                                    </Border>
                                </Popup>

                                <Button Style="{StaticResource MaterialDesignIconButton}" Click="Print_Click" ToolTip="Print" Background="Transparent"
                                      IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                    <materialDesign:PackIcon Kind="Printer" VerticalAlignment="Center" Foreground="Gray" />
                                </Button>

                                <Button Click="CloseBtn_Click" Grid.Row="0" Grid.Column="4" Style="{StaticResource MaterialDesignIconButton}"
                                      ToolTip="Account" Background="Transparent"
                                      IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                    <materialDesign:PackIcon Kind="AccountCircle" Foreground="#247BC0" />
                                </Button>
                            </StackPanel>
                        </Viewbox>
                    </StackPanel>
                </Grid>

                <!--</StackPanel>-->
                <!--</Viewbox>-->

                <!--#endregion header-->

                <WrapPanel Grid.Row="1" Grid.ColumnSpan="3"
                      Width="{Binding ElementName=RootControl, Path=ActualWidth}"
                      Grid.RowSpan="3" Margin="0,10,-10,0" Grid.Column="1" x:Name="Wrapper"
                      Height="{Binding ElementName=RootControl, Path=ActualHeight}" >
                    <!--<Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    -->
                    <!--#region navpnl treeview-->
                    <Border BorderBrush="Transparent" CornerRadius="0 10 10 0">
                        <Border.Background>
                            <SolidColorBrush x:Name="animatedPanelColor" Color="{Binding Source={x:Static settings:Settings.Default}, Path=Subsection_BG, Mode=TwoWay }"  />
                        </Border.Background>
                        <Grid x:Name="subsection_pnl" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="1" VerticalAlignment="Top">
                            <DockPanel>
                                <Grid DockPanel.Dock="Top">
                                    <TreeView x:Name="subsection_tv" Height="Auto" Margin="5,10,5,10" VerticalAlignment="Center" ScrollViewer.CanContentScroll="False" 
                                           ScrollViewer.HorizontalScrollBarVisibility="Hidden" HorizontalAlignment="Left" Width="350" 
                                           ItemContainerStyle="{DynamicResource TopTreeViewItemStyle}" Foreground="Black" FontWeight="Bold" >
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate >
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </Grid>

                                <StackPanel VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
                                    <Button x:Name="subsection_flyinbtn" Visibility="Visible" FontSize="15" FontWeight="Bold" HorizontalAlignment="right" VerticalAlignment="Top" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Black" Click="subsection_flyinbtn_Click" >
                                        <materialDesign:PackIcon Kind="ChevronLeft" Width="30" Height="30"/>
                                    </Button>
                                </StackPanel>
                                <StackPanel VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
                                    <Button x:Name="subsection_flyoutbtn" Visibility="Hidden" FontSize="15" FontWeight="Bold" HorizontalAlignment="Left" Margin="-10 0 0 0" VerticalAlignment="Top" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Black" Click="subsection_flyoutbtn_Click">
                                        <materialDesign:PackIcon Kind="ChevronRight" Width="30" Height="30"/>
                                    </Button>
                                </StackPanel>
                            </DockPanel>
                        </Grid>
                    </Border>
                    <Frame x:Name="MainWindowFrame" NavigationUIVisibility="Hidden" />
                </WrapPanel>

                <!--#region side menu bar-->
                <Grid x:Name="tab_pnl" Grid.RowSpan="3" Grid.Row="1"
                    Grid.ColumnSpan="2" Grid.Column="0" Margin="0 10 0 0"
                    HorizontalAlignment="left" Width="60"
                    Background="{Binding Source={x:Static settings:Settings.Default}, Path=MainPalette_Blue, Mode=TwoWay }" >
                    <StackPanel Margin="0 10 0 0" >
                        <ListView x:Name="LV" Background="Transparent" BorderBrush="Transparent"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Left">
                            <!--// Analytics //-->
                            <ListViewItem Tag="Analytics" Margin="0 5 0 5" x:Name="AnalyticsLVItem">
                                <StackPanel Orientation="Horizontal" Width="240">
                                    <materialDesign:PackIcon Kind="ChartLine" Foreground="White" Height="30" Width="30" Margin="5 0 0 0"/>
                                    <TextBlock Text="Analytics" FontSize="18"
                                           Margin="15,0,5,0" Style="{StaticResource font_style}"/>
                                </StackPanel>
                            </ListViewItem>

                            <!--// Planner //-->
                            <ListViewItem Tag="Planner" Margin="0 5 0 5" x:Name="PlannerLVItem">
                                <StackPanel Orientation="Horizontal" Width="240">
                                    <materialDesign:PackIcon Kind="Diary" Foreground="White" Height="30" Width="30" Margin="5 0 0 0" />
                                    <TextBlock Text="Planner" FontSize="18"
                                           Margin="15,0,5,0" Style="{StaticResource font_style}"/>
                                </StackPanel>
                            </ListViewItem>

                            <!--// Machine Learning //-->
                            <!--
                            <ListViewItem Tag="Machinelearning" Margin="0 5 0 5" x:Name="MLLVItem">
                                <StackPanel Orientation="Horizontal" Width="240">
                                    <materialDesign:PackIcon Kind="BulbOnOutline" Foreground="White" Height="30" Width="30" Margin="5 0 0 0" />
                                    <TextBlock Text="Machine Learning" FontSize="18" Margin="15,0,5,0"
                                           Style="{StaticResource font_style}"/>
                                </StackPanel>
                            </ListViewItem>-->

                            <!--// Resource Management //-->
                            <ListViewItem Tag="ResourceManagement" Margin="0 5 0 5" x:Name="RMLVItem">
                                <StackPanel Orientation="Horizontal" Width="240">
                                    <materialDesign:PackIcon Kind="KeyChainVariant" Foreground="White" Height="30" Width="30" Margin="5 0 0 0"/>
                                    <TextBlock Text="Resources" FontSize="18"
                                           Margin="15,0,5,0" Style="{StaticResource font_style}"/>
                                </StackPanel>
                            </ListViewItem>

                            <!--// Settings //-->
                            <ListViewItem Tag="Settings" x:Name="SettingsListViewItem" Margin="5 320 0 0" >
                                <StackPanel Orientation="Horizontal" Width="240">
                                    <materialDesign:PackIcon Kind="Gear" Width="30" Height="28" Foreground="White" />
                                    <TextBlock Text="Administrator" FontSize="18"
                                           Margin="15,0,5,0" Style="{StaticResource font_style}"/>
                                </StackPanel>
                            </ListViewItem>

                            <!--// Listview items style template //-->
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border x:Name="Bd1"
                                                    Margin="0 0 5 10"
                                                    Height="35"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True" CornerRadius="10">
                                                    <Border.Style>
                                                        <Style>
                                                        </Style>
                                                    </Border.Style>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Grid.Column="0"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd1" Value="#37465273"/>
                                                        <Setter Property="Height" TargetName="Bd1" Value="35"/>
                                                        <Setter Property="BorderBrush" TargetName="Bd1" Value="#37465273"/>
                                                        <Setter Property="Width" TargetName="Bd1" Value="260"/>
                                                        <Setter Property="Margin" TargetName="Bd1" Value="0 0 0 10"/>
                                                        <Setter Property="CornerRadius" TargetName="Bd1" Value="20, 20, 20, 20" />
                                                    </MultiTrigger>

                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="CornerRadius" TargetName="Bd1" Value="15" />
                                                        <Setter Property="Background" Value="#025999"/>
                                                        <Setter Property="Foreground" Value="WhiteSmoke"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </StackPanel>
                </Grid>
                <!--#endregion side menu bar-->
            </Grid>
        </Border>
    </Grid>
</Window>
