<Page xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  x:Class="Kirin_2.Pages.AttendancePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Kirin_2.Pages"
      xmlns:settings="clr-namespace:Kirin_2.Properties"
      mc:Ignorable="d" 
      FontFamily="{DynamicResource MaterialDesignFont}"
      d:DesignHeight="850" d:DesignWidth="1000"
      Width="Auto"
      SizeChanged="Window_SizeChanged"
      Title="Attendance">

    <Grid Background="WhiteSmoke">
        <Grid.Resources>
            <Style x:Key="isActiveClassStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Grid>
                                <Border x:Name="borderMain" BorderThickness="1" BorderBrush="Transparent">
                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <Rectangle x:Name="rectGlass" Fill="LightGray" Opacity=".2" Visibility="Hidden"></Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="borderMain" Property="BorderBrush" Value="#E6247BC0" />
                                    <Setter TargetName="rectGlass" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="10,0,0,0" >
            <Label Content="CURRENT CLASSES" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="24" FontWeight="SemiBold" Margin="10 10 0 0"/>

            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right" FlowDirection="LeftToRight" Margin="0 0 20 0">
                <!--<ComboBox ItemsSource="{Binding SchoolVM.LstSchool}" DisplayMemberPath="School_Name" Width="300" 
                  HorizontalAlignment="Right" Margin="0,10,20,5.8" SelectedItem="{Binding SubjectVM.SelectedSchool, UpdateSourceTrigger=PropertyChanged}" >
                </ComboBox>-->
                <TextBlock Name="txtSchool" VerticalAlignment="Center" Margin="0 0 10 0" FontSize="22" FontWeight="Bold"></TextBlock>
                <TextBlock Name="txtSemester" VerticalAlignment="Center" Margin="0,0,10,0" FontSize="22" />
            </StackPanel>
        </DockPanel>
        <StackPanel Grid.Row="1" Grid.Column="1">
            <Border x:Name="BorderClasses" BorderThickness="1" Panel.ZIndex="-100" CornerRadius="5,5,5,5" 
                    BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Dashboard_Box_Outline, Mode=TwoWay }" Background="Transparent"  >
                <StackPanel>
                    <DataGrid x:Name="DGClasses" ItemsSource="{Binding SubjectVM._subjectdata}"
                      AlternationCount="2" Height="650" Grid.Row="1" Grid.Column="1"
                      SelectionUnit="FullRow"         
                      AlternatingRowBackground= "{Binding Source={x:Static settings:Settings.Default}, Path=AlternatingBGColor, Mode=TwoWay }"
                      FontSize="16" CanUserAddRows="false" IsReadOnly="True" HorizontalScrollBarVisibility="Hidden" CanUserReorderColumns="False"
                      AutoGenerateColumns="False" Margin="10" 
                      VerticalScrollBarVisibility="Auto"
                      GridLinesVisibility="None">

                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=Datagrid_header, Mode=TwoWay }" />
                                <Setter Property="Height" Value="45" />
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="Foreground" Value="WhiteSmoke" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="Padding" Value="10 0" />
                            </Style>
                            <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                <Setter Property="Height" Value="45"/>
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="FontFamily" Value="Roboto" />
                                <Setter Property="VerticalAlignment" Value="Center"/>

                            </Style>

                            <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                                <Setter Property="Height" Value="45"/>
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="FontFamily" Value="Roboto" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <!--<Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>-->
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Code" Binding="{Binding Path=ClassCode}"  Width="100" >
                                <DataGridTextColumn.HeaderStyle>
                                    <Style  TargetType="DataGridColumnHeader">
                                        <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=Datagrid_header, Mode=TwoWay }"/>
                                        <Setter Property="Height" Value="45" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="Foreground" Value="WhiteSmoke" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Course Name" Binding="{Binding Path=ClassName}"   Width="400">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=Datagrid_header, Mode=TwoWay }"/>
                                        <Setter Property="Height" Value="45" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="Foreground" Value="WhiteSmoke" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="Margin" Value="100 0 0 0" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                        <Setter Property="Margin" Value="100 0 0 0"></Setter>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding Path=visibility}" >
                                            <Button Click="ItemContainerTemplate_Click" Tag="{Binding Path=ClassId}" Margin="55 0 30 0"
                                      Style="{StaticResource MaterialDesignIconForegroundButton}" Width="30" Height="30"
                                      ToolTip="Status"
                                      IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                                <Ellipse Focusable="True" Width="15" IsManipulationEnabled="True" Height="15" IsHitTestVisible="False"  Stroke="Black">
                                                    <Ellipse.Style>
                                                        <Style TargetType="{x:Type Ellipse}">
                                                            <Setter Property="Fill" Value="Transparent" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=isActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="1">
                                                                    <Setter Property="Fill" Value="GreenYellow" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Ellipse.Style>
                                                </Ellipse>
                                            </Button>
                                            <Button Width="35" Height="35" Click="Button_ClassAttendance" Tag="{Binding Path=ClassId}" Margin="30 0"
                                                  Style="{StaticResource MaterialDesignIconForegroundButton}" ToolTip="Class Attendance"
                                                  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                                <materialDesign:PackIcon Kind="Seat" Width="30" Height="30"/>
                                            </Button>
                                            <Button Width="35" Height="35" Click="Button_ClassMultidayAttendance" Tag="{Binding Path=ClassId}" Margin="30 0"
                                                  Style="{StaticResource MaterialDesignIconForegroundButton}" ToolTip="MultiDay Class Attendance"
                                                  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                                <materialDesign:PackIcon Kind="Grid" Width="30" Height="30" />
                                            </Button>
                                            <Button Width="35" Height="35" Margin="30 0" Style="{StaticResource MaterialDesignIconForegroundButton}"
                                                 ToolTip="Seating Plan" IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                                <materialDesign:PackIcon Kind="CalendarAccount" Width="30" Height="30"   />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--Visibility="{Binding DataContext.IsRoleVisible,  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"-->
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
           </Border>
        </StackPanel>
    </Grid>
</Page>
