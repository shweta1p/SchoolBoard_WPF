<Page x:Class="Kirin_2.Pages.AssignmentMaker"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Kirin_2.Pages"      
      mc:Ignorable="d" 
      FontFamily="{DynamicResource MaterialDesignFont}"
      xmlns:settings="clr-namespace:Kirin_2.Properties"
      d:DesignHeight="450" d:DesignWidth="1000"
       Width="Auto"
      Title="AssignmentMaker">
   
    <Page.Resources>
        <!-- Flat ComboBox -->
        <!--<SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="White" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                    
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="WhiteSmoke"/>

                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>

            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="0" 
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}" Margin="2,0,-2,-0.4"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            -->
        <!-- Popup showing items -->
        <!--
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{Binding Source={x:Static settings:Settings.Default}, Path=Combobox_bg, Mode=TwoWay }" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True" Foreground="WhiteSmoke" FontWeight="DemiBold">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!-- End of Flat ComboBox -->
        <Style x:Key="Centering" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="Null"></Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="False">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!-- the background for the button -->
                            <Rectangle   RadiusX="5" RadiusY="5" Grid.RowSpan="2" Height="20">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#3d78a6" Offset="0"/>
                                            <GradientStop Color="#3d78a6" Offset="0.9"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- place for the content inside the button to be displayed -->
                            <ContentPresenter Grid.RowSpan="2"  
              x:Name="PrimaryContent"
              HorizontalAlignment="Center" VerticalAlignment="Center"
              Margin="{TemplateBinding Padding}"
              Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
              />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Roboto" />
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="8"  Margin="10 10 0 0" >
            <TextBlock DockPanel.Dock="Left" FontSize="24" FontWeight="SemiBold" Margin="10 10 0 0" > ASSIGNMENT MAKER</TextBlock>
            <!--<StackPanel Orientation="Horizontal"  HorizontalAlignment="Right" Margin="500,0,0,0" DockPanel.Dock="Right" >
                    <ComboBox ItemsSource="{Binding CMBLIST}" DisplayMemberPath="DESCRIPTION" Width="120" Style="{DynamicResource ComboBoxFlatStyle}" VerticalAlignment="Center" 
                  HorizontalAlignment="Right"  
                      >
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding Semester_List}" DisplayMemberPath="SEMESTER1" Width="120"  VerticalAlignment="Center" Style="{DynamicResource ComboBoxFlatStyle}" 
                  HorizontalAlignment="Right" >
                    </ComboBox>

                </StackPanel>-->
            <!--<StackPanel Orientation="Horizontal" Margin="600 20 0 0" DockPanel.Dock="Right" >-->
                <!--<ComboBox  Width="200" Height="25" Style="{DynamicResource ComboBoxFlatStyle}"  ItemsSource="{Binding SchoolList}" DisplayMemberPath="School_Name" Margin="10,25,10,-0.4" SelectedItem="{Binding SchoolSelected,  UpdateSourceTrigger=PropertyChanged}" />-->

                <!--<ComboBox Width="77" Height="23" Style="{DynamicResource ComboBoxFlatStyle}" ItemsSource="{Binding CMBLIST}" DisplayMemberPath="DESCRIPTION"  SelectedItem="{Binding SemesterSelected , UpdateSourceTrigger=PropertyChanged}" />-->

                <!--<ComboBox Width="250" Height="30" Margin="5 0 15 0" Style="{DynamicResource ComboBoxFlatStyle}" DisplayMemberPath="SEMESTER" 
                          SelectedValuePath="ID" SelectedValue="{Binding ID}" x:Name="cmbSemester"
                          SelectionChanged="cmbSemester_SelectionChanged" HorizontalAlignment="Right" />-->
            <!--</StackPanel>-->
        </DockPanel>
        <Border BorderThickness="1" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Panel.ZIndex="-100" CornerRadius="5,5,5,5" 
                BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Dashboard_Box_Outline, Mode=TwoWay }"  Background="Transparent" Margin="10 0 10 0" >
            <StackPanel>
                <DataGrid x:Name="AssignmentDG" SelectionUnit="FullRow" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" ItemsSource="{Binding Assignment_List}" AlternationCount="2" 
                          AlternatingRowBackground="{Binding Source={x:Static settings:Settings.Default}, Path=AlternatingBGColor, Mode=TwoWay }"  FontSize="16" HorizontalContentAlignment="Stretch" 
                          ColumnWidth="*" HorizontalAlignment="Stretch" CanUserAddRows="false" CanUserDeleteRows="False"  IsReadOnly="False"  GridLinesVisibility="None" CanUserReorderColumns="False" AutoGenerateColumns="False" Margin="10" 
                          SelectedItem="{Binding SelectedAssignment, Mode=TwoWay}">
                    <!--<DataGrid.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding cDeleteAssignmentItemCommand}" />
                    </DataGrid.InputBindings>-->
                    <DataGrid.Resources>
                        <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=Datagrid_header, Mode=TwoWay }" />
                            <Setter Property="Height" Value="35" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Foreground" Value="WhiteSmoke" />
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="10 0" />
                        </Style>
                        <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                            <Setter Property="Height" Value="35"/>
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="FontFamily" Value="Roboto" />
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.Triggers>
                                <Trigger Property="DataGridCell.IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type ScrollBar}">
                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Width" Value="10"/>
                            <Setter Property="MinWidth" Value="10"/>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="black" />
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            <Setter Property="Height" Value="20" />
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Uploaded?" Width="120">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Style="{StaticResource Null}" IsChecked="{Binding Path=ISLOADEDstr}" HorizontalAlignment="Center" Visibility="{Binding Path=Visible}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Abbreviation" Binding="{Binding Path=ABRV}" ElementStyle="{StaticResource Centering}" Width="130">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Height" Value="35"/>
                                    <Setter Property="FontSize" Value="16" />
                                    <!--<Setter Property="Padding" Value="0" />-->
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontFamily" Value="Roboto" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="0 5"/>
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                      
                        <DataGridTextColumn Header="Name" Binding="{Binding Path=NAME}" ElementStyle="{StaticResource Centering}" Width="180" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                                    <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=Datagrid_header, Mode=TwoWay }" />
                                    <Setter Property="Height" Value="35" />
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Foreground" Value="WhiteSmoke" />
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Height" Value="35"/>
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontFamily" Value="Roboto" />
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn Header="Category" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="80" >
                                        <TextBlock Text="{Binding Path=CATEGORY}" Style="{StaticResource Centering}" FontWeight="Bold"/>
                                    </StackPanel>
                                    <!--<TextBlock VerticalAlignment="Center" Margin="4,2" Text="{Binding Path=CATEGORY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=DataContext.ASSIGNMENT_CATEGORY}" 
                                              DisplayMemberPath="CATEGORY" SelectedItem="{Binding Path=CATEGORYObj,  UpdateSourceTrigger=PropertyChanged}" 
                                              HorizontalContentAlignment="Center"
                                              Style="{DynamicResource ComboBoxFlatStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Score Type" Width="100" >
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="80" >
                                        <TextBlock Text="{Binding Path=SCORE_TYPE}" FontSize="14" FontWeight="Bold" TextAlignment="Center" HorizontalAlignment="Center"    />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <!--<ComboBox Style="{DynamicResource ComboBoxFlatStyle}" >
                                        <ComboBoxItem Content="Alphabetical"/>
                                        <ComboBoxItem Content="Numerical"/>
                                    </ComboBox>-->
                                    <ComboBox ItemsSource="{Binding  Path=DataContext.SCORETYPE,RelativeSource={RelativeSource AncestorType=DataGrid}}"  
                                              HorizontalContentAlignment="Center"
                                              SelectedItem="{Binding Path=SCORE_TYPE, UpdateSourceTrigger=PropertyChanged}" 
                                              Style="{DynamicResource ComboBoxFlatStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Weight" Binding="{Binding Path=WEIGHT}" ElementStyle="{StaticResource Centering}" Width="80" >
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Height" Value="35"/>
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontFamily" Value="Roboto" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                  
                        <DataGridTextColumn Header="Point Possible" Binding="{Binding Path=POINTS_POSSIBLE}" ElementStyle="{StaticResource Centering}"  Width="130">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Height" Value="35"/>
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontFamily" Value="Roboto" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn Header="Due Date" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="100" >
                                        <TextBlock FontSize="16" FontWeight="Bold" Text="{Binding Path=DATE_DUE,  StringFormat=\{0:dd-MMM-yyyy\}}"  
                                                   Style="{StaticResource Centering}" Visibility="{Binding Path=Visible}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker Width="80" SelectedDate="{Binding DATE_DUE}" Height="30" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </Border>
        <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="0 0">
            <Button Content="Add Assignment" Height="40" FontSize="20" HorizontalAlignment="left" HorizontalContentAlignment="Left" Padding="10 0"  Margin="10 0 5 0" Click="Button_Click"/>
            <Button Content="Save Assignment" FontSize="20" HorizontalAlignment="left" HorizontalContentAlignment="Left" Padding="10 0" Margin="5 0 5 0" Command="{Binding cSaveAssignmentCommand}"/>
            <Button Content="Delete Assignment" FontSize="20" HorizontalAlignment="left" HorizontalContentAlignment="Left" Padding="10 0" Margin="5 0" Click="Delete_Click" /> <!--Command="{Binding cDeleteAssignmentItemCommand}"-->
        </StackPanel>
    </Grid>
</Page>
 