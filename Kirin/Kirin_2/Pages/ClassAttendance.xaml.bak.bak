<Page  x:Class="Kirin_2.Pages.ClassAttendance"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  xmlns:settings="clr-namespace:Kirin_2.Properties"
      xmlns:local="clr-namespace:Kirin_2.Pages"
       xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
       mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
       Width="1020"
      Title="ClassAttendance">


    <Page.Resources>

        
        
        <ResourceDictionary>




           
            <Style x:Key="Null"></Style>

            <Style TargetType="Button" x:Key="TabButton">
                <Setter Property="Background" Value="White" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="0" Background="White" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color, Mode=TwoWay }" BorderThickness="0,1,1,0" >
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="TabButtonFirst">
                <Setter Property="Background" Value="White" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="3,0,0,0" Background="White" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color, Mode=TwoWay }" BorderThickness="0,1,1,0" >
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="TabButtonLast">
                <Setter Property="Background" Value="White" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="0,0,0,3" Background="White" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color, Mode=TwoWay }" BorderThickness="0,1,1,0" >
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!-- the background for the button -->
                                <Rectangle   RadiusX="5" RadiusY="5" Grid.RowSpan="2" Height="20">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="#3d78a6" Offset="0"/>
                                                <GradientStop Color="#3d78a6" Offset="0.9"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>

                                <!-- place for the content inside the button to be displayed -->
                                <ContentPresenter Grid.RowSpan="2"  
              x:Name="PrimaryContent"
              HorizontalAlignment="Center" VerticalAlignment="Center"
              Margin="{TemplateBinding Padding}"
              Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
              />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontFamily" Value="Arial" />
            </Style>

            <Style x:Key="MaterialDesignRaisedButton" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1" />
                <Setter Property="TextBlock.FontWeight" Value="Medium"/>
                <Setter Property="TextBlock.FontSize" Value="14"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="16 4 16 4"/>
                <Setter Property="Height" Value="32" />
                <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False" />
                <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value=".4" />
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="2" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" 
                                        CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth)}" />
                                        <ProgressBar x:Name="ProgressBar"
                                             Style="{DynamicResource MaterialDesignLinearProgressBar}"
                                             Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Minimum)}"
                                             Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Maximum)}"
                                             Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorForeground)}"
                                             Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorBackground)}"
                                             Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Value)}"
                                             IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndeterminate)}"
                                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                             Height="{TemplateBinding Height}"
                                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}"
                                             Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Opacity)}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center">
                                        </ProgressBar>
                                    </Grid>
                                </AdornerDecorator>
                                <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <materialDesign:Ripple.Clip>
                                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                            <Binding ElementName="border" Path="ActualWidth" />
                                            <Binding ElementName="border" Path="ActualHeight" />
                                            <Binding ElementName="border" Path="CornerRadius" />
                                            <Binding ElementName="border" Path="BorderThickness" />
                                        </MultiBinding>
                                    </materialDesign:Ripple.Clip>
                                </materialDesign:Ripple>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="False" />
                                    <Setter Property="Background" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4">
                <Label x:Name="ClassTitle" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left"  VerticalAlignment="Top" FontSize="15" FontWeight="SemiBold" ></Label>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right" FlowDirection="LeftToRight" >
                    <ComboBox   Width="285" Margin="25,4" 
                    Foreground="#5C98C2" BorderBrush="Transparent" FontWeight="DemiBold"   >

                        <ComboBoxItem Content="Saint Andre Bessette Catholic Secondary School" IsSelected="True"/>
                        <ComboBoxItem Content="London Elementary School"/>


                    </ComboBox>
                    <TextBlock Text="20-21 Semester 2" VerticalAlignment="Center" Margin="-5,12,0,10.8" Height="18" Width="105" FontWeight="DemiBold" Foreground="Gray" />
                </StackPanel>
            </DockPanel>





            <!--Group box for Attendance Codes-->
            <Border Visibility="Visible" BorderThickness="1" Grid.Row="2" Grid.Column="0"  Margin="15,5,15,0"
           Panel.ZIndex="-100" Width="215"
          CornerRadius="5,5,5,5" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color_inner, Mode=TwoWay }" Background="Transparent"/>
            <Label Grid.Row="2" Grid.Column="0" Margin="25,8,0.4,0" FontWeight="DemiBold">Attendance Code</Label>
            <ComboBox Style="{StaticResource ComboBoxFlatStyle}" Grid.Row="2" Grid.Column="0" ItemsSource="{Binding AttendanceCodes}"  SelectedItem="{Binding AttendanceCodeSelectedItem, UpdateSourceTrigger=PropertyChanged}"   DisplayMemberPath="desc" Margin="50,20,0,0" Width="150" Height="30" HorizontalAlignment="Left" xmlns:sys="clr-namespace:System;assembly=mscorlib" >
                
                
            </ComboBox>

            <!--end :: Group box for Attendance Codes-->


            <!--Group box for Date -->
            <Border Visibility="Visible" BorderThickness="1" Grid.Row="2" Grid.Column="1"  Margin="-30,5,15,0" Panel.ZIndex="-100" Width="180" CornerRadius="5,5,5,5" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color_inner, Mode=TwoWay }" Background="Transparent"/>
            <Label Grid.Row="2" Grid.Column="1"  Margin="25,8,29.8,0" FontWeight="DemiBold">Date</Label>
            <DatePicker Width="150"  Grid.Row="2" Grid.Column="1"   Margin="-50,20,0,0" SelectedDate="{Binding AttendanceDate}" />
            <!--end :: Group box for Date-->


            <!--Group box for Class -->
            <Border Visibility="Visible" BorderThickness="1" Grid.Row="2" Grid.Column="2"  Margin="-80,5,15,0" Panel.ZIndex="-100" Width="180" CornerRadius="5,5,5,5" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color_inner, Mode=TwoWay }" Background="Transparent"/>
            <Label Grid.Row="2" Grid.Column="2" Margin="0,8,0,0" FontWeight="DemiBold">Classes</Label>
            <Button Grid.Row="2" Grid.Column="2" Width="135" Margin="-90,20,0,0" Content="Show Multiple Sections"/>
            <!--end :: Group box for Classes-->

            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="20 0">
                <Button  Width="80" Content="Single Day" x:Name="TabButtonFirst"/>
                <Button Width="80" Content="Multi-Day" x:Name="TabButtonLast"  Click="SwitchToMultiDayView"  Tag="{Binding ClassID}"  />
            </StackPanel>




            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="3" Margin="-50 20 0 0">
                <materialDesign:ColorZone
                        
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
                        HorizontalContentAlignment="Left"
        Mode="Light"
        materialDesign:ShadowAssist.ShadowDepth="Depth1" Height="30" Width="180" Background="WhiteSmoke"  >
                    <StackPanel Width="180" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Style="{DynamicResource MaterialDesignToolButton}" VerticalContentAlignment="Center">
                            <materialDesign:PackIcon Kind="Search" Width="15" Height="15" Opacity=".56"  />
                        </Button>
                        <TextBox Width="140"
                                     FontSize="14"
                                 FontWeight="Bold"
            Margin="-4 0 0 0"
            materialDesign:HintAssist.Hint=""
            materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
            BorderThickness="0"
            MinWidth="100"
                                     TextChanged="SearchBox_TextChanged"
                                     Name="SearchBox"
                                    
            VerticalAlignment="Center" />

                    </StackPanel>
                </materialDesign:ColorZone>
            
            <Button  Width="50" Content="Submit"  HorizontalAlignment="Right" Command="{Binding SaveSubjectAttendance}" CommandParameter="{Binding CList}" Margin="30,0 ,0,0"  Click="SubmitAttendance"  Tag="{Binding ClassID}" />
            <!--Command="{Binding SaveSubjectAttendance}" CommandParameter="{Binding CList}"-->
            <Border Visibility="Hidden" BorderThickness="1" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Margin="10,5,10,-5"
        CornerRadius="5,5,5,5" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color, Mode=TwoWay }" Background="Transparent" Panel.ZIndex="-98">
            </Border>
            </StackPanel>

            <!--Group box for grid view-->
            <Border BorderThickness="1" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="10,15,10,5"
           Panel.ZIndex="-99"
          CornerRadius="5,5,5,5" BorderBrush="{Binding Source={x:Static settings:Settings.Default}, Path=Border_color, Mode=TwoWay }" Background="Transparent"/>

            <DataGrid 
                 x:Name="AttendanceList"  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" IsReadOnly="True" Focusable="False"  SelectionUnit="FullRow" VerticalAlignment="Top" ItemsSource="{Binding CList}" AlternationCount="2"
                      AlternatingRowBackground="{Binding Source={x:Static settings:Settings.Default}, Path=AlternatingBGColor, Mode=TwoWay }"
                      FontSize="12" CanUserAddRows="false"   HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto"  
                              GridLinesVisibility="None" CanUserReorderColumns="False" CanUserSortColumns="True" AutoGenerateColumns="False" Margin="15 20 15 15" >

                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=Datagrid_header, Mode=TwoWay }" />
                        <Setter Property="Height" Value="25" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Foreground" Value="WhiteSmoke" />

                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Padding" Value="10 0" />
                    </Style>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Height" Value=" 35"/>

                    </Style>

                </DataGrid.Resources>
                <DataGrid.CellStyle>

                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="FontSize" Value="11" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />

                 
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>

           

                    <DataGridTemplateColumn Header="Students" Width="200">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="Margin" Value="5 0 0 0"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=AlternatingBGColor, Mode=TwoWay }"/>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >
                               
       <TextBlock Margin="10 0 0 0" FontWeight="Bold" Text="{Binding Path=STUDENT_FULLNAME}" FontSize="14"  VerticalAlignment="Center" HorizontalAlignment="Left" />
                               
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <DataGridTemplateColumn Header="Alerts"    Width="150" >
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=AlternatingBGColor, Mode=TwoWay }"/>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >

                                <StackPanel Orientation="Horizontal">
                                    <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}" Command="{Binding Path=DataContext.cViewHealthAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" Visibility="{Binding MEDICALICONVISIBILITY}" >
                                        <Path Data=" " Fill="Red" />
                                    </Button>
                                    <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}" Visibility="{Binding Path=BDAYICONVISIBILITY}" Command="{Binding Path=DataContext.cViewBdayAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}">
                                        <Path Data=" " Fill="Blue"  />
                                    </Button>
                                    <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}" Visibility="{Binding SPEDICONVISIBILITY}" Command="{Binding Path=DataContext.cViewSPEDAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" >
                                        <Path Data=" " Fill="Gold"    />
                                    </Button>
                                    <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}"  Visibility="{Binding OTHERICONVISIBILITY}" Command="{Binding Path=DataContext.cViewOtherAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}"  >
                                        <Path Data=" " Fill="Gold"  />
                                    </Button>

                                </StackPanel>
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn >
                          <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="Margin" Value="5 0 0 0"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="{Binding Source={x:Static settings:Settings.Default}, Path=AlternatingBGColor, Mode=TwoWay }"/>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.Header>
                            <TextBlock Text="{Binding DataContext.AttendanceHeaderCurrent ,  RelativeSource={RelativeSource AncestorType=DataGrid}}"></TextBlock>
                        </DataGridTemplateColumn.Header>
                        
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                <ComboBox Width="150" Height="20" FontSize="10"  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=DataContext.AttendanceCodes}"
                                              DisplayMemberPath="desc"
                                         
                                          
                                           Style="{StaticResource ComboBoxFlatStyle}"
                                              SelectedItem="{Binding Path=ATTENDANCE_CODE ,UpdateSourceTrigger=PropertyChanged }" 
                                              SelectedValuePath="code"
                                               xmlns:sys="clr-namespace:System;assembly=mscorlib"
                                         
                                        >
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding  Path=DataContext.cCheckCommentIconVisibility, RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </ComboBox>
                                    <Button Margin="10 0 0 0" Visibility="{Binding Path=COMMENTICONVISIBILITY, UpdateSourceTrigger=PropertyChanged}" materialDesign:RippleAssist.IsDisabled="True"  Style="{x:Null}"
  HorizontalAlignment="Center"  VerticalAlignment="Center" BorderBrush="Transparent"
  Background="Transparent" BorderThickness="0"
                                            Command="{Binding Path=DataContext.cViewComment,  RelativeSource= {RelativeSource AncestorType={x:Type DataGrid}}}"  CommandParameter="{Binding}"
  IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                        <materialDesign:PackIcon 
    Kind="CommentTextOutline" Foreground="Gray" Height="20" />

                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>


            <!--<ListView ItemsSource="{Binding CList}"  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Top" AlternationCount="2"   Margin="20,25,20,15" 
                      ScrollViewer.HorizontalScrollBarVisibility="Hidden"  >

                <ListView.ItemContainerStyle>

                    <Style TargetType="ListViewItem">
                        <Setter Property="Height" Value="25" />
                
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                <Setter Property="Background" Value="WhiteSmoke" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="AliceBlue" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontWeight" Value="DemiBold" />
                            </Trigger>

                        </Style.Triggers>
                    </Style>

                </ListView.ItemContainerStyle>
                <ListView.View>

                    <GridView  AllowsColumnReorder="true"  ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                        <GridView.ColumnHeaderContainerStyle >
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Background" Value="#247BC0" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="VerticalAlignment" Value="center"/>

                                <Setter Property="Height" Value="30" />
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="Students"   Width="200"
                    DisplayMemberBinding="{Binding Path=STUDENT_FULLNAME}" />
                        --><!--<GridViewColumn Header="Alerts" Width="200"
                    DisplayMemberBinding="{Binding Path=ALERTS}"/>--><!--
                        <GridViewColumn Width="200" >
                            <GridViewColumn.Header >
                                <StackPanel HorizontalAlignment="Center" Width="200" >
                                <TextBlock Text="Alerts" TextAlignment="Center" />
                                </StackPanel>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}" Command="{Binding Path=DataContext.cViewHealthAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" Visibility="{Binding MEDICALICONVISIBILITY}" >
                                            <Path Data=" " Fill="Red" />
                                        </Button>
                                        <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}" Visibility="{Binding Path=BDAYICONVISIBILITY}" Command="{Binding Path=DataContext.cViewBdayAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}">
                                            <Path Data=" " Fill="Blue"  />
                                        </Button>
                                        <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}" Visibility="{Binding SPEDICONVISIBILITY}" Command="{Binding Path=DataContext.cViewSPEDAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" >
                                            <Path Data=" " Fill="Gold"    />
                                        </Button>
                                        <Button BorderThickness="0" Background="Transparent" Style="{StaticResource Null}"  Visibility="{Binding OTHERICONVISIBILITY}" Command="{Binding Path=DataContext.cViewOtherAlert,  RelativeSource= {RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}"  >
                                            <Path Data=" " Fill="Gold"  />
                                        </Button>

                                    </StackPanel>
                                </DataTemplate>

                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{Binding AttendanceHeaderCurrent}"  Width="1000" >
                            <GridViewColumn.CellTemplate>

                                <ItemContainerTemplate>
                                    <ComboBox Width="250" Height="28"  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=DataContext.AttendanceCodes}"
                                              DisplayMemberPath="desc"
                                           Style="{StaticResource ComboBoxFlatStyle}"
                                              SelectedItem="{Binding Path=ATTENDANCE_CODE ,UpdateSourceTrigger=PropertyChanged }" 
                                              SelectedValuePath="code"
                                               xmlns:sys="clr-namespace:System;assembly=mscorlib"
                                         
                                        >
                                       
                                    </ComboBox>
                                </ItemContainerTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                    </GridView>
                </ListView.View>

            </ListView>-->

        </Grid>
    </Grid>
</Page>
