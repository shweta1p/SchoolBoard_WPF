

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Kirin_2.Models
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class KIRINEntities1 : DbContext
{
    public KIRINEntities1()
        : base("name=KIRINEntities1")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<APPROVED_BUDGET> APPROVED_BUDGET { get; set; }

    public virtual DbSet<ASSIGNMENT> ASSIGNMENTs { get; set; }

    public virtual DbSet<ASSIGNMENT_CATEGORY> ASSIGNMENT_CATEGORY { get; set; }

    public virtual DbSet<ATTENDANCE_CODES> ATTENDANCE_CODES { get; set; }

    public virtual DbSet<CLASS_ATTENDANCE> CLASS_ATTENDANCE { get; set; }

    public virtual DbSet<Class_DayofWeek> Class_DayofWeek { get; set; }

    public virtual DbSet<CLASS_STUDENT> CLASS_STUDENT { get; set; }

    public virtual DbSet<CLUB> CLUBS { get; set; }

    public virtual DbSet<COUNTRy> COUNTRIES { get; set; }

    public virtual DbSet<DAILYBULLETIN> DAILYBULLETINs { get; set; }

    public virtual DbSet<DEPARTMENT> DEPARTMENTS { get; set; }

    public virtual DbSet<DOMAIN> DOMAINs { get; set; }

    public virtual DbSet<GRADE_MASTER> GRADE_MASTER { get; set; }

    public virtual DbSet<GRADE> GRADES { get; set; }

    public virtual DbSet<HOLIDAY_LIST> HOLIDAY_LIST { get; set; }

    public virtual DbSet<IMG_TBL> IMG_TBL { get; set; }

    public virtual DbSet<IMG_TYPE_CLASSIFICATION> IMG_TYPE_CLASSIFICATION { get; set; }

    public virtual DbSet<LANGUAGE_PRIORITY> LANGUAGE_PRIORITY { get; set; }

    public virtual DbSet<LANGUAGE> LANGUAGES { get; set; }

    public virtual DbSet<ROLE> ROLEs { get; set; }

    public virtual DbSet<SCHOOL> SCHOOLs { get; set; }

    public virtual DbSet<SCHOOLBOARD> SCHOOLBOARDs { get; set; }

    public virtual DbSet<SCHOOLBOARD_ADMINS> SCHOOLBOARD_ADMINS { get; set; }

    public virtual DbSet<SEMESTER> SEMESTERs { get; set; }

    public virtual DbSet<SerialNumber> SerialNumbers { get; set; }

    public virtual DbSet<STAFF_DIRECTORY> STAFF_DIRECTORY { get; set; }

    public virtual DbSet<STAFF_PHONE_NO> STAFF_PHONE_NO { get; set; }

    public virtual DbSet<STUDENT> STUDENTs { get; set; }

    public virtual DbSet<STUDENT_ALERT_MAPPING> STUDENT_ALERT_MAPPING { get; set; }

    public virtual DbSet<STUDENT_ALERTS> STUDENT_ALERTS { get; set; }

    public virtual DbSet<STUDENT_AVG_GRADE> STUDENT_AVG_GRADE { get; set; }

    public virtual DbSet<STUDENT_COCURRICULAR> STUDENT_COCURRICULAR { get; set; }

    public virtual DbSet<STUDENT_EXTRA_CO> STUDENT_EXTRA_CO { get; set; }

    public virtual DbSet<STUDENT_GRADE> STUDENT_GRADE { get; set; }

    public virtual DbSet<STUDENT_LANGUAGE_MAPPING> STUDENT_LANGUAGE_MAPPING { get; set; }

    public virtual DbSet<STUDENT_PHONE_NO> STUDENT_PHONE_NO { get; set; }

    public virtual DbSet<STUDENT_SCORE> STUDENT_SCORE { get; set; }

    public virtual DbSet<STUDENT_SPECIAL_NEEDS> STUDENT_SPECIAL_NEEDS { get; set; }

    public virtual DbSet<STUDENT_TRANSFERRED> STUDENT_TRANSFERRED { get; set; }

    public virtual DbSet<SUBJECT_TEACHER_MAPPING> SUBJECT_TEACHER_MAPPING { get; set; }

    public virtual DbSet<SUBJECT_TYPE> SUBJECT_TYPE { get; set; }

    public virtual DbSet<SUBJECT> SUBJECTS { get; set; }

    public virtual DbSet<TEACHER_DISABILITY> TEACHER_DISABILITY { get; set; }

    public virtual DbSet<TEACHER_DISCIPLINARY_ACTIONS> TEACHER_DISCIPLINARY_ACTIONS { get; set; }

    public virtual DbSet<TEACHER_EXTRA_CO> TEACHER_EXTRA_CO { get; set; }

    public virtual DbSet<TEACHER_LANGUAGE_MAPPING> TEACHER_LANGUAGE_MAPPING { get; set; }

    public virtual DbSet<TEACHING_STATUS> TEACHING_STATUS { get; set; }

    public virtual DbSet<TRANSFER_TYPE> TRANSFER_TYPE { get; set; }

    public virtual DbSet<USER> USERs { get; set; }

    public virtual DbSet<NOTIFICATION> NOTIFICATIONS { get; set; }

    public virtual DbSet<NOTIFICATION_TYPE> NOTIFICATION_TYPE { get; set; }

    public virtual DbSet<STUDENT_COMMENT> STUDENT_COMMENT { get; set; }

    public virtual DbSet<STUDENT_SUBJECT_MAPPING> STUDENT_SUBJECT_MAPPING { get; set; }

    public virtual DbSet<FEEDBACK> FEEDBACKs { get; set; }


    public virtual ObjectResult<getStudentScoreSheet_Result> getStudentScoreSheet(string studentID, string semesterID)
    {

        var studentIDParameter = studentID != null ?
            new ObjectParameter("StudentID", studentID) :
            new ObjectParameter("StudentID", typeof(string));


        var semesterIDParameter = semesterID != null ?
            new ObjectParameter("SemesterID", semesterID) :
            new ObjectParameter("SemesterID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentScoreSheet_Result>("getStudentScoreSheet", studentIDParameter, semesterIDParameter);
    }


    public virtual ObjectResult<EthnicityVSLanguageDS_Result> EthnicityVSLanguageDS()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EthnicityVSLanguageDS_Result>("EthnicityVSLanguageDS");
    }


    public virtual ObjectResult<getLanguageCountAllStudents_Result> getLanguageCountAllStudents()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLanguageCountAllStudents_Result>("getLanguageCountAllStudents");
    }


    [DbFunction("KIRINEntities1", "SplitString")]
    public virtual IQueryable<string> SplitString(string sString, string cDelimiter)
    {

        var sStringParameter = sString != null ?
            new ObjectParameter("sString", sString) :
            new ObjectParameter("sString", typeof(string));


        var cDelimiterParameter = cDelimiter != null ?
            new ObjectParameter("cDelimiter", cDelimiter) :
            new ObjectParameter("cDelimiter", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[KIRINEntities1].[SplitString](@sString, @cDelimiter)", sStringParameter, cDelimiterParameter);
    }


    public virtual int usp_ImportImage(string picName, string imageFolderPath, string filename)
    {

        var picNameParameter = picName != null ?
            new ObjectParameter("PicName", picName) :
            new ObjectParameter("PicName", typeof(string));


        var imageFolderPathParameter = imageFolderPath != null ?
            new ObjectParameter("ImageFolderPath", imageFolderPath) :
            new ObjectParameter("ImageFolderPath", typeof(string));


        var filenameParameter = filename != null ?
            new ObjectParameter("Filename", filename) :
            new ObjectParameter("Filename", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ImportImage", picNameParameter, imageFolderPathParameter, filenameParameter);
    }


    public virtual ObjectResult<GetSchoolDBData_Result> GetSchoolDBData(string role, string schoolId)
    {

        var roleParameter = role != null ?
            new ObjectParameter("Role", role) :
            new ObjectParameter("Role", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchoolDBData_Result>("GetSchoolDBData", roleParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetStaffData_Result> GetStaffData(string schoolID, string role)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var roleParameter = role != null ?
            new ObjectParameter("Role", role) :
            new ObjectParameter("Role", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStaffData_Result>("GetStaffData", schoolIDParameter, roleParameter);
    }


    public virtual ObjectResult<GetStudentProfileData_Result> GetStudentProfileData(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentProfileData_Result>("GetStudentProfileData", iDParameter);
    }


    public virtual ObjectResult<GetStaffDatabyId_Result> GetStaffDatabyId(Nullable<int> iD, string role)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var roleParameter = role != null ?
            new ObjectParameter("Role", role) :
            new ObjectParameter("Role", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStaffDatabyId_Result>("GetStaffDatabyId", iDParameter, roleParameter);
    }


    public virtual ObjectResult<GetTeacherProfileData_Result> GetTeacherProfileData(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherProfileData_Result>("GetTeacherProfileData", iDParameter);
    }


    public virtual ObjectResult<GetAssignmentList_Result> GetAssignmentList(string sUBJECT_ID, string schoolID, string semesterID)
    {

        var sUBJECT_IDParameter = sUBJECT_ID != null ?
            new ObjectParameter("SUBJECT_ID", sUBJECT_ID) :
            new ObjectParameter("SUBJECT_ID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var semesterIDParameter = semesterID != null ?
            new ObjectParameter("SemesterID", semesterID) :
            new ObjectParameter("SemesterID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentList_Result>("GetAssignmentList", sUBJECT_IDParameter, schoolIDParameter, semesterIDParameter);
    }


    public virtual ObjectResult<GetSchoolList_Result> GetSchoolList(string schoolID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchoolList_Result>("GetSchoolList", schoolIDParameter);
    }


    public virtual ObjectResult<GetSemesterList_Result> GetSemesterList()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSemesterList_Result>("GetSemesterList");
    }


    public virtual ObjectResult<GetStudentListbySubject_Result> GetStudentListbySubject(string subjectID, string schoolID, string userName)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentListbySubject_Result>("GetStudentListbySubject", subjectIDParameter, schoolIDParameter, userNameParameter);
    }


    public virtual ObjectResult<GetSubjectList_Result> GetSubjectList(string schoolID, string semesterID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var semesterIDParameter = semesterID != null ?
            new ObjectParameter("SemesterID", semesterID) :
            new ObjectParameter("SemesterID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectList_Result>("GetSubjectList", schoolIDParameter, semesterIDParameter);
    }


    public virtual ObjectResult<GetBudgetData_Result> GetBudgetData()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBudgetData_Result>("GetBudgetData");
    }


    public virtual ObjectResult<getClassListing_Result> getClassListing(string schoolID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("schoolID", schoolID) :
            new ObjectParameter("schoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getClassListing_Result>("getClassListing", schoolIDParameter);
    }


    public virtual ObjectResult<GetShortBudgetData_Result> GetShortBudgetData(string yEAR)
    {

        var yEARParameter = yEAR != null ?
            new ObjectParameter("YEAR", yEAR) :
            new ObjectParameter("YEAR", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShortBudgetData_Result>("GetShortBudgetData", yEARParameter);
    }


    public virtual ObjectResult<getBirthOriginCountbySubjectID_Result> getBirthOriginCountbySubjectID(string subjectID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBirthOriginCountbySubjectID_Result>("getBirthOriginCountbySubjectID", subjectIDParameter);
    }


    public virtual ObjectResult<getLanguageCountofStudentsbySubject_Result> getLanguageCountofStudentsbySubject(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLanguageCountofStudentsbySubject_Result>("getLanguageCountofStudentsbySubject", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetChildNodeofBudgetData_Result> GetChildNodeofBudgetData(Nullable<int> parentID, string yEAR)
    {

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(int));


        var yEARParameter = yEAR != null ?
            new ObjectParameter("YEAR", yEAR) :
            new ObjectParameter("YEAR", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChildNodeofBudgetData_Result>("GetChildNodeofBudgetData", parentIDParameter, yEARParameter);
    }


    public virtual ObjectResult<GetChildNodeDataforMindTree_Result> GetChildNodeDataforMindTree(Nullable<int> parentID)
    {

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChildNodeDataforMindTree_Result>("GetChildNodeDataforMindTree", parentIDParameter);
    }


    public virtual ObjectResult<GetDailyBulletinData_Result> GetDailyBulletinData(Nullable<int> schoolID)
    {

        var schoolIDParameter = schoolID.HasValue ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDailyBulletinData_Result>("GetDailyBulletinData", schoolIDParameter);
    }


    public virtual ObjectResult<GetDailyBulletinDatabyDate_Result> GetDailyBulletinDatabyDate(Nullable<int> schoolID, Nullable<System.DateTime> selectedDate)
    {

        var schoolIDParameter = schoolID.HasValue ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(int));


        var selectedDateParameter = selectedDate.HasValue ?
            new ObjectParameter("SelectedDate", selectedDate) :
            new ObjectParameter("SelectedDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDailyBulletinDatabyDate_Result>("GetDailyBulletinDatabyDate", schoolIDParameter, selectedDateParameter);
    }


    public virtual ObjectResult<GetStudentListbySubjectId_Result> GetStudentListbySubjectId(string subjectID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentListbySubjectId_Result>("GetStudentListbySubjectId", subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentGradebySubjectId_Result> GetGradesbySubjectId(string subjectId, string studentId, string toggleType)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var toggleTypeParameter = toggleType != null ?
            new ObjectParameter("ToggleType", toggleType) :
            new ObjectParameter("ToggleType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentGradebySubjectId_Result>("GetGradesbySubjectId", subjectIdParameter, studentIdParameter, toggleTypeParameter);
    }


    public virtual ObjectResult<GetOrganizationalData_Result> GetOrganizationalData()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganizationalData_Result>("GetOrganizationalData");
    }


    public virtual ObjectResult<GetStudentDatafromTeacherID_Result> GetStudentDatafromTeacherID(Nullable<int> parentID)
    {

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatafromTeacherID_Result>("GetStudentDatafromTeacherID", parentIDParameter);
    }


    public virtual ObjectResult<GetHierarchicalData_Result> GetHierarchicalData()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHierarchicalData_Result>("GetHierarchicalData");
    }


    public virtual ObjectResult<GetSubjectIdforStudent_Result> GetSubjectIdforStudent(string studentId)
    {

        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectIdforStudent_Result>("GetSubjectIdforStudent", studentIdParameter);
    }


    public virtual ObjectResult<GetStackedBarAttandanceData_Result> GetStackedBarAttandanceData(string fromDate, string toDate, Nullable<int> subjectId, Nullable<int> schoolId)
    {

        var fromDateParameter = fromDate != null ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(string));


        var toDateParameter = toDate != null ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(string));


        var subjectIdParameter = subjectId.HasValue ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(int));


        var schoolIdParameter = schoolId.HasValue ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStackedBarAttandanceData_Result>("GetStackedBarAttandanceData", fromDateParameter, toDateParameter, subjectIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetStudentCitizenshipCountbySubjectID_Result> GetStudentCitizenshipCountbySubjectID(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentCitizenshipCountbySubjectID_Result>("GetStudentCitizenshipCountbySubjectID", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentDateofBirthCountbySubjectID_Result> GetStudentDateofBirthCountbySubjectID(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDateofBirthCountbySubjectID_Result>("GetStudentDateofBirthCountbySubjectID", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentScatterPlotData_Result> GetStudentScatterPlotData(string subjectId, string schoolId)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentScatterPlotData_Result>("GetStudentScatterPlotData", subjectIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetDiversityData_Result> GetDiversityData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDiversityData_Result>("GetDiversityData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStackedDiversityEthnicityData_Result> GetStackedDiversityEthnicityData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStackedDiversityEthnicityData_Result>("GetStackedDiversityEthnicityData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentExtraCo_Result> GetStudentExtraCo(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentExtraCo_Result>("GetStudentExtraCo", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentTransfferedCount_Result> GetStudentTransfferedCount(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentTransfferedCount_Result>("GetStudentTransfferedCount", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetTransferredStudentDataforBarGraph_Result> GetTransferredStudentDataforBarGraph(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransferredStudentDataforBarGraph_Result>("GetTransferredStudentDataforBarGraph", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentClubData_Result> GetStudentClubData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentClubData_Result>("GetStudentClubData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentLanguageDataforHeatmap_Result> GetStudentLanguageDataforHeatmap(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentLanguageDataforHeatmap_Result>("GetStudentLanguageDataforHeatmap", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentDateofBirthData_Result> GetStudentDateofBirthData(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDateofBirthData_Result>("GetStudentDateofBirthData", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetUserData_Result> GetUserData(string userName)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserData_Result>("GetUserData", userNameParameter);
    }


    public virtual ObjectResult<GetSchoolNameforUser_Result> GetSchoolNameforUser(string userName)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchoolNameforUser_Result>("GetSchoolNameforUser", userNameParameter);
    }


    public virtual ObjectResult<GetClassDataforTeacher_Result> GetClassDataforTeacher(string teacherId, string schoolId)
    {

        var teacherIdParameter = teacherId != null ?
            new ObjectParameter("TeacherId", teacherId) :
            new ObjectParameter("TeacherId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassDataforTeacher_Result>("GetClassDataforTeacher", teacherIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetExtraCoDataforTeacher_Result> GetExtraCoDataforTeacher(string teacherId, string schoolId)
    {

        var teacherIdParameter = teacherId != null ?
            new ObjectParameter("TeacherId", teacherId) :
            new ObjectParameter("TeacherId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExtraCoDataforTeacher_Result>("GetExtraCoDataforTeacher", teacherIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetPieTransfferedStudentData_Result> GetPieTransfferedStudentData(string schoolID, string subjectID, string labelPoint)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var labelPointParameter = labelPoint != null ?
            new ObjectParameter("LabelPoint", labelPoint) :
            new ObjectParameter("LabelPoint", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPieTransfferedStudentData_Result>("GetPieTransfferedStudentData", schoolIDParameter, subjectIDParameter, labelPointParameter);
    }


    public virtual ObjectResult<GetStudentDataforScatterPoint_Result> GetStudentDataforScatterPoint(string subjectId, string schoolId, string fName, string lName)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var fNameParameter = fName != null ?
            new ObjectParameter("FName", fName) :
            new ObjectParameter("FName", typeof(string));


        var lNameParameter = lName != null ?
            new ObjectParameter("LName", lName) :
            new ObjectParameter("LName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDataforScatterPoint_Result>("GetStudentDataforScatterPoint", subjectIdParameter, schoolIdParameter, fNameParameter, lNameParameter);
    }


    public virtual ObjectResult<GetStudentDatabyCitizenship_Result> GetStudentDatabyCitizenship(string subjectID, string schoolID, string citizenship)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var citizenshipParameter = citizenship != null ?
            new ObjectParameter("Citizenship", citizenship) :
            new ObjectParameter("Citizenship", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyCitizenship_Result>("GetStudentDatabyCitizenship", subjectIDParameter, schoolIDParameter, citizenshipParameter);
    }


    public virtual ObjectResult<GetAttendanceCode_Result> GetAttendanceCode()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttendanceCode_Result>("GetAttendanceCode");
    }


    public virtual ObjectResult<GetStudentAttendance_Result> GetStudentAttendance(string subjectId, string schoolId, string fName, string lName)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var fNameParameter = fName != null ?
            new ObjectParameter("FName", fName) :
            new ObjectParameter("FName", typeof(string));


        var lNameParameter = lName != null ?
            new ObjectParameter("LName", lName) :
            new ObjectParameter("LName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentAttendance_Result>("GetStudentAttendance", subjectIdParameter, schoolIdParameter, fNameParameter, lNameParameter);
    }


    public virtual ObjectResult<GetStudentAttendancebyCode_Result> GetStudentAttendancebyCode(Nullable<int> subjectId, Nullable<int> schoolId, string date, string attendanceCode)
    {

        var subjectIdParameter = subjectId.HasValue ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(int));


        var schoolIdParameter = schoolId.HasValue ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(int));


        var dateParameter = date != null ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(string));


        var attendanceCodeParameter = attendanceCode != null ?
            new ObjectParameter("AttendanceCode", attendanceCode) :
            new ObjectParameter("AttendanceCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentAttendancebyCode_Result>("GetStudentAttendancebyCode", subjectIdParameter, schoolIdParameter, dateParameter, attendanceCodeParameter);
    }


    public virtual ObjectResult<GetStudentCitizenshipData_Result> GetStudentCitizenshipData(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentCitizenshipData_Result>("GetStudentCitizenshipData", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetAssignmentCategory_Result> GetAssignmentCategory()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentCategory_Result>("GetAssignmentCategory");
    }


    public virtual int AddAssignment(string rEPORTING_TERM, string nAME, string aBRV, string cATEGORY, string pOINTS_POSSIBLE, string wEIGHT, string dATE_DUE, string sUBJECT_ID, string sCORE_TYPE, Nullable<bool> iSLOADED)
    {

        var rEPORTING_TERMParameter = rEPORTING_TERM != null ?
            new ObjectParameter("REPORTING_TERM", rEPORTING_TERM) :
            new ObjectParameter("REPORTING_TERM", typeof(string));


        var nAMEParameter = nAME != null ?
            new ObjectParameter("NAME", nAME) :
            new ObjectParameter("NAME", typeof(string));


        var aBRVParameter = aBRV != null ?
            new ObjectParameter("ABRV", aBRV) :
            new ObjectParameter("ABRV", typeof(string));


        var cATEGORYParameter = cATEGORY != null ?
            new ObjectParameter("CATEGORY", cATEGORY) :
            new ObjectParameter("CATEGORY", typeof(string));


        var pOINTS_POSSIBLEParameter = pOINTS_POSSIBLE != null ?
            new ObjectParameter("POINTS_POSSIBLE", pOINTS_POSSIBLE) :
            new ObjectParameter("POINTS_POSSIBLE", typeof(string));


        var wEIGHTParameter = wEIGHT != null ?
            new ObjectParameter("WEIGHT", wEIGHT) :
            new ObjectParameter("WEIGHT", typeof(string));


        var dATE_DUEParameter = dATE_DUE != null ?
            new ObjectParameter("DATE_DUE", dATE_DUE) :
            new ObjectParameter("DATE_DUE", typeof(string));


        var sUBJECT_IDParameter = sUBJECT_ID != null ?
            new ObjectParameter("SUBJECT_ID", sUBJECT_ID) :
            new ObjectParameter("SUBJECT_ID", typeof(string));


        var sCORE_TYPEParameter = sCORE_TYPE != null ?
            new ObjectParameter("SCORE_TYPE", sCORE_TYPE) :
            new ObjectParameter("SCORE_TYPE", typeof(string));


        var iSLOADEDParameter = iSLOADED.HasValue ?
            new ObjectParameter("ISLOADED", iSLOADED) :
            new ObjectParameter("ISLOADED", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAssignment", rEPORTING_TERMParameter, nAMEParameter, aBRVParameter, cATEGORYParameter, pOINTS_POSSIBLEParameter, wEIGHTParameter, dATE_DUEParameter, sUBJECT_IDParameter, sCORE_TYPEParameter, iSLOADEDParameter);
    }


    public virtual ObjectResult<GetStudentDatabyEthnicity_Result> GetStudentDatabyEthnicity(string subjectID, string schoolID, string ethnicity)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var ethnicityParameter = ethnicity != null ?
            new ObjectParameter("Ethnicity", ethnicity) :
            new ObjectParameter("Ethnicity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyEthnicity_Result>("GetStudentDatabyEthnicity", subjectIDParameter, schoolIDParameter, ethnicityParameter);
    }


    public virtual ObjectResult<GetAlertType_Result> GetAlertType()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlertType_Result>("GetAlertType");
    }


    public virtual int SaveStudentAlerts(string studentId, string alertId, string description)
    {

        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var alertIdParameter = alertId != null ?
            new ObjectParameter("AlertId", alertId) :
            new ObjectParameter("AlertId", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStudentAlerts", studentIdParameter, alertIdParameter, descriptionParameter);
    }


    public virtual ObjectResult<GetClassAttendanceData_Result> GetClassAttendanceData(string subjectId, Nullable<System.DateTime> date)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassAttendanceData_Result>("GetClassAttendanceData", subjectIdParameter, dateParameter);
    }


    public virtual int AddComments(string classAttendaceId, string comment, string schoolId, string studentId, string subjectId, string userName)
    {

        var classAttendaceIdParameter = classAttendaceId != null ?
            new ObjectParameter("ClassAttendaceId", classAttendaceId) :
            new ObjectParameter("ClassAttendaceId", typeof(string));


        var commentParameter = comment != null ?
            new ObjectParameter("Comment", comment) :
            new ObjectParameter("Comment", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddComments", classAttendaceIdParameter, commentParameter, schoolIdParameter, studentIdParameter, subjectIdParameter, userNameParameter);
    }


    public virtual ObjectResult<GetTransferStudentDatabyMonth_Result> GetTransferStudentDatabyMonth(string schoolID, string subjectID, string month)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var monthParameter = month != null ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransferStudentDatabyMonth_Result>("GetTransferStudentDatabyMonth", schoolIDParameter, subjectIDParameter, monthParameter);
    }


    public virtual ObjectResult<GetDOBDatabyMonth_Result> GetDOBDatabyMonth(string schoolID, string subjectID, string month)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var monthParameter = month != null ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDOBDatabyMonth_Result>("GetDOBDatabyMonth", schoolIDParameter, subjectIDParameter, monthParameter);
    }


    public virtual ObjectResult<GetStudentDatabySports_Result> GetStudentDatabySports(string subjectID, string schoolID, string sport)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var sportParameter = sport != null ?
            new ObjectParameter("Sport", sport) :
            new ObjectParameter("Sport", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabySports_Result>("GetStudentDatabySports", subjectIDParameter, schoolIDParameter, sportParameter);
    }


    public virtual ObjectResult<GetStudentAttendanceData_Result> GetStudentAttendanceData(string studentId, string subjectId)
    {

        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentAttendanceData_Result>("GetStudentAttendanceData", studentIdParameter, subjectIdParameter);
    }


    public virtual ObjectResult<GetStudentDatabyClub_Result> GetStudentDatabyClub(string subjectID, string schoolID, string club)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var clubParameter = club != null ?
            new ObjectParameter("Club", club) :
            new ObjectParameter("Club", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyClub_Result>("GetStudentDatabyClub", subjectIDParameter, schoolIDParameter, clubParameter);
    }


    public virtual ObjectResult<GetStudentDatabyDiversity_Result> GetStudentDatabyDiversity(string schoolID, string subjectID, string diversity)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var diversityParameter = diversity != null ?
            new ObjectParameter("Diversity", diversity) :
            new ObjectParameter("Diversity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyDiversity_Result>("GetStudentDatabyDiversity", schoolIDParameter, subjectIDParameter, diversityParameter);
    }


    public virtual ObjectResult<GetStudentDatabyLanguage_Result> GetStudentDatabyLanguage(string schoolID, string subjectID, string language)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var languageParameter = language != null ?
            new ObjectParameter("Language", language) :
            new ObjectParameter("Language", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyLanguage_Result>("GetStudentDatabyLanguage", schoolIDParameter, subjectIDParameter, languageParameter);
    }


    public virtual ObjectResult<GetStudentEthnicityLegendData_Result> GetStudentEthnicityLegendData(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentEthnicityLegendData_Result>("GetStudentEthnicityLegendData", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetEthnicityData_Result> GetEthnicityData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEthnicityData_Result>("GetEthnicityData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetTransferredStudentDataforStackedBar_Result> GetTransferredStudentDataforStackedBar(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransferredStudentDataforStackedBar_Result>("GetTransferredStudentDataforStackedBar", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetTransferType_Result> GetTransferType()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransferType_Result>("GetTransferType");
    }


    public virtual ObjectResult<GetStudentDOBdataforLegend_Result> GetStudentDOBdataforLegend(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDOBdataforLegend_Result>("GetStudentDOBdataforLegend", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetTransferStudentDatabyType_Result> GetTransferStudentDatabyType(string schoolID, string subjectID, string transferType, string month)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var transferTypeParameter = transferType != null ?
            new ObjectParameter("TransferType", transferType) :
            new ObjectParameter("TransferType", typeof(string));


        var monthParameter = month != null ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransferStudentDatabyType_Result>("GetTransferStudentDatabyType", schoolIDParameter, subjectIDParameter, transferTypeParameter, monthParameter);
    }


    public virtual ObjectResult<GetDistinctCitizenshipCount_Result> GetDistinctCitizenshipCount(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistinctCitizenshipCount_Result>("GetDistinctCitizenshipCount", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetEthnicityfromDiversity_Result> GetEthnicityfromDiversity(string schoolID, string subjectID, string diversity)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var diversityParameter = diversity != null ?
            new ObjectParameter("Diversity", diversity) :
            new ObjectParameter("Diversity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEthnicityfromDiversity_Result>("GetEthnicityfromDiversity", schoolIDParameter, subjectIDParameter, diversityParameter);
    }


    public virtual int GetMultiClassAttendanceData(string schoolID, string subjectID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMultiClassAttendanceData", schoolIDParameter, subjectIDParameter, fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<GetStackedDiversityData_Result> GetStackedDiversityData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStackedDiversityData_Result>("GetStackedDiversityData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentGenderCount_Result> GetStudentGenderCount(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentGenderCount_Result>("GetStudentGenderCount", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentTransfferedStackBarLegend_Result> GetStudentTransfferedStackBarLegend(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentTransfferedStackBarLegend_Result>("GetStudentTransfferedStackBarLegend", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentMapData_Result> GetStudentMapData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentMapData_Result>("GetStudentMapData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentDataforMapPoint_Result> GetStudentDataforMapPoint(string studentID)
    {

        var studentIDParameter = studentID != null ?
            new ObjectParameter("StudentID", studentID) :
            new ObjectParameter("StudentID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDataforMapPoint_Result>("GetStudentDataforMapPoint", studentIDParameter);
    }


    public virtual ObjectResult<GetStudentModeofTransportation_Result> GetStudentModeofTransportation(string schoolID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentModeofTransportation_Result>("GetStudentModeofTransportation", schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentsList_Result> GetStudentsList(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentsList_Result>("GetStudentsList", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentScoreandAverage_Result> GetStudentScoreandAverage(string subjectId, string studentId)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentScoreandAverage_Result>("GetStudentScoreandAverage", subjectIdParameter, studentIdParameter);
    }


    public virtual ObjectResult<GetStudentScorebyClass_Result> GetStudentScorebyClass(string schoolID, string studentID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var studentIDParameter = studentID != null ?
            new ObjectParameter("StudentID", studentID) :
            new ObjectParameter("StudentID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentScorebyClass_Result>("GetStudentScorebyClass", schoolIDParameter, studentIDParameter);
    }


    public virtual ObjectResult<GetStudentDatabyEthnicityandDivesity_Result> GetStudentDatabyEthnicityandDivesity(string subjectID, string schoolID, string ethnicity, string diversity)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var ethnicityParameter = ethnicity != null ?
            new ObjectParameter("Ethnicity", ethnicity) :
            new ObjectParameter("Ethnicity", typeof(string));


        var diversityParameter = diversity != null ?
            new ObjectParameter("Diversity", diversity) :
            new ObjectParameter("Diversity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyEthnicityandDivesity_Result>("GetStudentDatabyEthnicityandDivesity", subjectIDParameter, schoolIDParameter, ethnicityParameter, diversityParameter);
    }


    public virtual ObjectResult<GetAverageGradesbySubject_Result> GetAverageGradesbySubject(string subjectId, string studentId)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAverageGradesbySubject_Result>("GetAverageGradesbySubject", subjectIdParameter, studentIdParameter);
    }


    public virtual ObjectResult<GetClassInfo_Result> GetClassInfo(string courseCode)
    {

        var courseCodeParameter = courseCode != null ?
            new ObjectParameter("CourseCode", courseCode) :
            new ObjectParameter("CourseCode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassInfo_Result>("GetClassInfo", courseCodeParameter);
    }


    public virtual ObjectResult<GetGradesbySubjectforRadar_Result> GetGradesbySubjectforRadar(string schoolId, string studentId)
    {

        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesbySubjectforRadar_Result>("GetGradesbySubjectforRadar", schoolIdParameter, studentIdParameter);
    }


    public virtual ObjectResult<GetGradesVsDiversityBubbleChartData_Result> GetGradesVsDiversityBubbleChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsDiversityBubbleChartData_Result>("GetGradesVsDiversityBubbleChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsDiversityBoxPlotChartData_Result> GetGradesVsDiversityBoxPlotChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsDiversityBoxPlotChartData_Result>("GetGradesVsDiversityBoxPlotChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsDiversityAreaChartData_Result> GetGradesVsDiversityAreaChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsDiversityAreaChartData_Result>("GetGradesVsDiversityAreaChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsDiversityRadarChartData_Result> GetGradesVsDiversityRadarChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsDiversityRadarChartData_Result>("GetGradesVsDiversityRadarChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsCitizenshipAreaChartData_Result> GetGradesVsCitizenshipAreaChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsCitizenshipAreaChartData_Result>("GetGradesVsCitizenshipAreaChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsCitizenshipBubbleChartData_Result> GetGradesVsCitizenshipBubbleChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsCitizenshipBubbleChartData_Result>("GetGradesVsCitizenshipBubbleChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsCitizenshipRadarChartData_Result> GetGradesVsCitizenshipRadarChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsCitizenshipRadarChartData_Result>("GetGradesVsCitizenshipRadarChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsLanguagesChartData_Result> GetGradesVsLanguagesChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsLanguagesChartData_Result>("GetGradesVsLanguagesChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetGradesVsAttendanceData_Result> GetGradesVsAttendanceData(string subjectId, string schoolId)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsAttendanceData_Result>("GetGradesVsAttendanceData", subjectIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetGradesVsAttendanceHistogramData_Result> GetGradesVsAttendanceHistogramData(string subjectId, string schoolId)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesVsAttendanceHistogramData_Result>("GetGradesVsAttendanceHistogramData", subjectIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetEthnicityVsCocurricularBubbleChartData_Result> GetEthnicityVsCocurricularBubbleChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEthnicityVsCocurricularBubbleChartData_Result>("GetEthnicityVsCocurricularBubbleChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual int GetStackedEthnicityVsSportsData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetStackedEthnicityVsSportsData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetEthnicityVsLanguagesBubbleChartData_Result> GetEthnicityVsLanguagesBubbleChartData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEthnicityVsLanguagesBubbleChartData_Result>("GetEthnicityVsLanguagesBubbleChartData", schoolIDParameter, subjectIDParameter);
    }


    public virtual int GetStackedEthnicityVsLanguagesData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetStackedEthnicityVsLanguagesData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetStudentAlertsData_Result> GetStudentAlertsData(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentAlertsData_Result>("GetStudentAlertsData", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetSportsfromEthnicity_Result> GetSportsfromEthnicity(string schoolID, string subjectID, string ethnicity)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var ethnicityParameter = ethnicity != null ?
            new ObjectParameter("Ethnicity", ethnicity) :
            new ObjectParameter("Ethnicity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSportsfromEthnicity_Result>("GetSportsfromEthnicity", schoolIDParameter, subjectIDParameter, ethnicityParameter);
    }


    public virtual ObjectResult<GetStackedEthnicityData_Result> GetStackedEthnicityData(string schoolID, string subjectID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStackedEthnicityData_Result>("GetStackedEthnicityData", schoolIDParameter, subjectIDParameter);
    }


    public virtual ObjectResult<GetLanguagefromEthnicity_Result> GetLanguagefromEthnicity(string schoolID, string subjectID, string ethnicity)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var ethnicityParameter = ethnicity != null ?
            new ObjectParameter("Ethnicity", ethnicity) :
            new ObjectParameter("Ethnicity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLanguagefromEthnicity_Result>("GetLanguagefromEthnicity", schoolIDParameter, subjectIDParameter, ethnicityParameter);
    }


    public virtual ObjectResult<GetStudentDatabyEthnicityandLanguage_Result> GetStudentDatabyEthnicityandLanguage(string subjectID, string schoolID, string ethnicity, string language)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var ethnicityParameter = ethnicity != null ?
            new ObjectParameter("Ethnicity", ethnicity) :
            new ObjectParameter("Ethnicity", typeof(string));


        var languageParameter = language != null ?
            new ObjectParameter("Language", language) :
            new ObjectParameter("Language", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyEthnicityandLanguage_Result>("GetStudentDatabyEthnicityandLanguage", subjectIDParameter, schoolIDParameter, ethnicityParameter, languageParameter);
    }


    public virtual ObjectResult<GetStudentDatabyEthnicityandSports_Result> GetStudentDatabyEthnicityandSports(string subjectID, string schoolID, string ethnicity, string extraCo)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var ethnicityParameter = ethnicity != null ?
            new ObjectParameter("Ethnicity", ethnicity) :
            new ObjectParameter("Ethnicity", typeof(string));


        var extraCoParameter = extraCo != null ?
            new ObjectParameter("ExtraCo", extraCo) :
            new ObjectParameter("ExtraCo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDatabyEthnicityandSports_Result>("GetStudentDatabyEthnicityandSports", subjectIDParameter, schoolIDParameter, ethnicityParameter, extraCoParameter);
    }


    public virtual ObjectResult<string> GetFinancialYearforBudget()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFinancialYearforBudget");
    }


    public virtual ObjectResult<GetBudgetLegendData_Result> GetBudgetLegendData(string yEAR, string parentID)
    {

        var yEARParameter = yEAR != null ?
            new ObjectParameter("YEAR", yEAR) :
            new ObjectParameter("YEAR", typeof(string));


        var parentIDParameter = parentID != null ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBudgetLegendData_Result>("GetBudgetLegendData", yEARParameter, parentIDParameter);
    }


    public virtual ObjectResult<GetBudgetLegendChildData_Result> GetBudgetLegendChildData(string parentID)
    {

        var parentIDParameter = parentID != null ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBudgetLegendChildData_Result>("GetBudgetLegendChildData", parentIDParameter);
    }


    public virtual ObjectResult<GetStudentProfileDetails_Result> GetStudentProfileDetails(string studentId, string schoolId)
    {

        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentProfileDetails_Result>("GetStudentProfileDetails", studentIdParameter, schoolIdParameter);
    }


    public virtual ObjectResult<GetParentBudgetData_Result> GetParentBudgetData(string yEAR)
    {

        var yEARParameter = yEAR != null ?
            new ObjectParameter("YEAR", yEAR) :
            new ObjectParameter("YEAR", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetParentBudgetData_Result>("GetParentBudgetData", yEARParameter);
    }


    public virtual ObjectResult<GetParentID_Result> GetParentID(string parentID)
    {

        var parentIDParameter = parentID != null ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetParentID_Result>("GetParentID", parentIDParameter);
    }


    public virtual ObjectResult<GetAssignmentDatabyCourseID_Result> GetAssignmentDatabyCourseID(string schoolId, string studentId, string courseId)
    {

        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var courseIdParameter = courseId != null ?
            new ObjectParameter("CourseId", courseId) :
            new ObjectParameter("CourseId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentDatabyCourseID_Result>("GetAssignmentDatabyCourseID", schoolIdParameter, studentIdParameter, courseIdParameter);
    }


    public virtual ObjectResult<GetCourseInstructorData_Result> GetCourseInstructorData(string schoolId, string studentId, string subjectId)
    {

        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseInstructorData_Result>("GetCourseInstructorData", schoolIdParameter, studentIdParameter, subjectIdParameter);
    }


    public virtual ObjectResult<GetGradesbyCitizenship_Result> GetGradesbyCitizenship(string schoolID, string subjectID, string citizenship)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var citizenshipParameter = citizenship != null ?
            new ObjectParameter("Citizenship", citizenship) :
            new ObjectParameter("Citizenship", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesbyCitizenship_Result>("GetGradesbyCitizenship", schoolIDParameter, subjectIDParameter, citizenshipParameter);
    }


    public virtual ObjectResult<GetGradesbyDiversity_Result> GetGradesbyDiversity(string schoolID, string subjectID, string diversity)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var diversityParameter = diversity != null ?
            new ObjectParameter("Diversity", diversity) :
            new ObjectParameter("Diversity", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesbyDiversity_Result>("GetGradesbyDiversity", schoolIDParameter, subjectIDParameter, diversityParameter);
    }


    public virtual ObjectResult<GetGradesbyLanguage_Result> GetGradesbyLanguage(string schoolID, string subjectID, string languageID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var languageIDParameter = languageID != null ?
            new ObjectParameter("LanguageID", languageID) :
            new ObjectParameter("LanguageID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGradesbyLanguage_Result>("GetGradesbyLanguage", schoolIDParameter, subjectIDParameter, languageIDParameter);
    }


    public virtual ObjectResult<GetAssignmentScoreSheet_Result> GetAssignmentScoreSheet(string assignmentID, string subjectID, string schoolID)
    {

        var assignmentIDParameter = assignmentID != null ?
            new ObjectParameter("AssignmentID", assignmentID) :
            new ObjectParameter("AssignmentID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentScoreSheet_Result>("GetAssignmentScoreSheet", assignmentIDParameter, subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetAttendanceReport_Result> GetAttendanceReport(string subjectID, string schoolID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttendanceReport_Result>("GetAttendanceReport", subjectIDParameter, schoolIDParameter, fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<string> GetDateRange(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDateRange", fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<string> GetDateRangeforAttendance(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDateRangeforAttendance", fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<GetEarlierNotification_Result> GetEarlierNotification(string schoolId, string userName)
    {

        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEarlierNotification_Result>("GetEarlierNotification", schoolIdParameter, userNameParameter);
    }


    public virtual ObjectResult<GetNewNotifications_Result> GetNewNotifications(string schoolId, string userName)
    {

        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewNotifications_Result>("GetNewNotifications", schoolIdParameter, userNameParameter);
    }


    public virtual ObjectResult<GetScoresheetbySubject_Result> GetScoresheetbySubject(string subjectId, string schoolID)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScoresheetbySubject_Result>("GetScoresheetbySubject", subjectIdParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetStudentsbyCourse_Result> GetStudentsbyCourse(string subjectID, string schoolID)
    {

        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentsbyCourse_Result>("GetStudentsbyCourse", subjectIDParameter, schoolIDParameter);
    }


    public virtual ObjectResult<GetSchoolAlerts_Result> GetSchoolAlerts(string schoolId, string userName)
    {

        var schoolIdParameter = schoolId != null ?
            new ObjectParameter("SchoolId", schoolId) :
            new ObjectParameter("SchoolId", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchoolAlerts_Result>("GetSchoolAlerts", schoolIdParameter, userNameParameter);
    }


    public virtual ObjectResult<GetStudentComments_Result> GetStudentComments(string studentId)
    {

        var studentIdParameter = studentId != null ?
            new ObjectParameter("StudentId", studentId) :
            new ObjectParameter("StudentId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentComments_Result>("GetStudentComments", studentIdParameter);
    }


    public virtual int AddStudentComments(string studentID, string comment, string updatedBy)
    {

        var studentIDParameter = studentID != null ?
            new ObjectParameter("StudentID", studentID) :
            new ObjectParameter("StudentID", typeof(string));


        var commentParameter = comment != null ?
            new ObjectParameter("Comment", comment) :
            new ObjectParameter("Comment", typeof(string));


        var updatedByParameter = updatedBy != null ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudentComments", studentIDParameter, commentParameter, updatedByParameter);
    }


    public virtual int SaveFeedback(string feedback, byte[] image, string user)
    {

        var feedbackParameter = feedback != null ?
            new ObjectParameter("Feedback", feedback) :
            new ObjectParameter("Feedback", typeof(string));


        var imageParameter = image != null ?
            new ObjectParameter("Image", image) :
            new ObjectParameter("Image", typeof(byte[]));


        var userParameter = user != null ?
            new ObjectParameter("User", user) :
            new ObjectParameter("User", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveFeedback", feedbackParameter, imageParameter, userParameter);
    }


    public virtual ObjectResult<GetStudentsforSearch_Result> GetStudentsforSearch(string schoolID, string subjectID, string userName)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        var subjectIDParameter = subjectID != null ?
            new ObjectParameter("SubjectID", subjectID) :
            new ObjectParameter("SubjectID", typeof(string));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentsforSearch_Result>("GetStudentsforSearch", schoolIDParameter, subjectIDParameter, userNameParameter);
    }


    public virtual ObjectResult<GetAssignmentsforSearch_Result> GetAssignmentsforSearch()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentsforSearch_Result>("GetAssignmentsforSearch");
    }


    public virtual ObjectResult<GetStaffforSearch_Result> GetStaffforSearch(string schoolID)
    {

        var schoolIDParameter = schoolID != null ?
            new ObjectParameter("SchoolID", schoolID) :
            new ObjectParameter("SchoolID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStaffforSearch_Result>("GetStaffforSearch", schoolIDParameter);
    }


    public virtual ObjectResult<GetAssignmentforSchedule_Result> GetAssignmentforSchedule(string subjectId)
    {

        var subjectIdParameter = subjectId != null ?
            new ObjectParameter("SubjectId", subjectId) :
            new ObjectParameter("SubjectId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignmentforSchedule_Result>("GetAssignmentforSchedule", subjectIdParameter);
    }

}

}

